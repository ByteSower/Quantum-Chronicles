name: 🚀 Release & Deploy

on:
  push:
    tags:
      - 'v*'  # Triggers when you push a tag like v0.3.0

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📋 Install dependencies
      run: npm ci
      
    - name: 🧪 Run tests (if you add them later)
      run: npm test || true  # Continue even if no tests yet
      
    - name: 🏗️ Build project
      run: npm run build
      
    - name: 📝 Extract version from tag
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: 📄 Generate release notes from CHANGELOG
      id: release_notes
      run: |
        # Extract the latest version section from CHANGELOG.md
        VERSION="${{ steps.version.outputs.version }}"
        VERSION_NO_V=${VERSION#v}  # Remove 'v' prefix
        
        # Get the section between current version and next version/end
        NOTES=$(sed -n "/## \[${VERSION_NO_V}\]/,/## \[/p" CHANGELOG.md | sed '$d' | tail -n +2)
        
        # If no specific notes found, use the git tag message
        if [ -z "$NOTES" ]; then
          NOTES=$(git tag -l --format='%(contents)' $VERSION)
        fi
        
        # Save to file for GitHub release
        echo "$NOTES" > release_notes.txt
        
    - name: 🎯 Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version }}
        release_name: 'Quantum Chronicles ${{ steps.version.outputs.version }}'
        body_path: release_notes.txt
        draft: false
        prerelease: false
        
    - name: 🚀 Deploy to GitHub Pages
      run: npm run deploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 🎉 Success notification
      run: |
        echo "✅ Successfully released ${{ steps.version.outputs.version }}"
        echo "🌐 Live at: https://bytesower.github.io/Quantum-Chronicles"
